<?php
/**
 * Created by PhpStorm.
 * User: mazitovtr
 * Date: 07.02.19
 * Time: 9:15
 */

namespace ProductionBundle\Repository;

use AppBundle\Traits\RepositoryPaginatorTrait;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * SerialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SerialRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param int $currentPage
     * @param $perPage
     * @return Paginator
     */
    public function getAvailableSerials($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('s');

        $qb->select('s');

        if (!empty($filters['project'])) {
            $qb
                ->leftJoin('s.ware', 'w')
                ->andWhere('w.project = :project')
                ->setParameter('project', $filters['project'])
            ;
        }

        if (!empty($filters['ware'])) {
            $qb
                ->andWhere('s.ware = :ware')
                ->setParameter('ware', $filters['ware'])
            ;
        }

        if (!empty($filters['category'])) {
            $qb
                ->andWhere('s.category = :category')
                ->setParameter('category', $filters['category'])
            ;
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }
}