<?php

namespace InfrastructureBundle\Repository;

use AppBundle\Traits\RepositoryPaginatorTrait;
use Doctrine\ORM\QueryBuilder;

/**
 * ComputerPartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ComputerPartRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param int $currentPage
     * @param int $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getComputerParts($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('cp');
        $qb = $this->applyComputerParts($qb, $filters);

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }

    /**
     * @param $filters
     * @return mixed
     */
    public function getAvailableComputerParts($filters)
    {
        $qb = $this->createQueryBuilder('cp');
        $qb = $this->applyComputerParts($qb, $filters);

        return $qb->getQuery()->getResult();
    }


    /**
     * @param QueryBuilder $qb
     * @param $filters
     * @return QueryBuilder
     */
    protected function applyComputerParts(QueryBuilder $qb, $filters)
    {
        $qb
            ->select('cp')
            ->andWhere($qb->expr()->eq('cp.deleted',':deleted'))
            ->setParameter('deleted', false);

        $qb = $this->applyFilters($qb, $filters);

        return $qb;
    }

    protected function applyFilters(QueryBuilder $qb, $filters)
    {
        if (!empty($filters['type'])) {
            $qb
                ->andWhere('cp.type = :type')
                ->setParameter('type', $filters['type']);
        }

        return $qb;
    }
}