<?php

namespace AppBundle\Repository;
use AppBundle\Entity\ProjectTask;
use AppBundle\Entity\User;

/**
 * TaskDiffRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskDiffRepository extends \Doctrine\ORM\EntityRepository
{
    public function getTaskChanges(ProjectTask $task)
    {
        $qb = $this->createQueryBuilder('td');

        $qb
            ->select('td')
            ->where($qb->expr()->eq('td.task', ':taskId'))
            ->setParameter('taskId', $task->getId());

        $qb->orderBy('td.id', 'DESC');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param User $user
     * @return array
     */
    public function getLatestChanges(User $user)
    {
        $qb = $this->createQueryBuilder('td');

        $qb
            ->select('td')
            ->where('td.changedBy = :changedBy')
            ->andWhere('td.field = :field')
            ->andWhere(
                $qb->expr()->in('td.newValue', ':newValues')
            )
            ->andWhere(
                $qb->expr()->between('td.updatedAt', ':yesterday', ':now')
            )
            ->setParameters([
                'changedBy' => $user,
                'field' => 'status',
                'newValues' => [
                    ProjectTask::getStatusList()[ProjectTask::STATUS_IN_PROGRESS],
                    ProjectTask::getStatusList()[ProjectTask::STATUS_DONE]
                ],
                'yesterday' => new \DateTime('yesterday 00:00:00'),
                'now' => new \DateTime('now')
            ]);

        $qb->orderBy('td.id', 'DESC');

        return $qb->getQuery()->getResult();
    }
}
