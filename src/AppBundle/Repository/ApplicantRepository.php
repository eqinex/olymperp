<?php


namespace AppBundle\Repository;
use AppBundle\Traits\RepositoryPaginatorTrait;
use Doctrine\ORM\QueryBuilder;

/**
 * ApplicantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class ApplicantRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param $currentPage
     * @param $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getAllApplicants($filters, $currentPage, $perPage) {
        $qb = $this->createQueryBuilder('app');

        $qb->select('app');

        $qb = $this->applyFilters($qb, $filters);

        $qb->orderBy('app.createdAt', 'DESC');

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }

    /**
     * @param QueryBuilder $qb
     * @param $filters
     * @return QueryBuilder
     */
    protected function applyFilters(QueryBuilder $qb, $filters)
    {

        if (!empty($filters['employeeRole'])) {
            $qb
                ->andWhere($qb->expr()->eq('app.employeeRole', ':employeeRole'))
                ->setParameter('employeeRole', $filters['employeeRole']);
        }
        if (!empty($filters['applicant'])) {
            $qb
                ->andWhere($qb->expr()->eq('app.id', ':applicant'))
                ->setParameter('applicant', $filters['applicant']);
        }
        if (!empty($filters['status'])) {
            $qb
                ->leftJoin('app.status', 'st')
                ->andWhere($qb->expr()->eq('st.id', ':status'))
                ->setParameter('status', $filters['status']);
        }
        if (!empty($filters['mail'])) {
            $qb
                ->andWhere($qb->expr()->like('app.email', ':mail'))
                ->setParameter('mail', '%' . $filters['mail'] . '%');
        }
        if (!empty($filters['phone'])) {
            $qb
                ->andWhere($qb->expr()->like('app.phone', ':phone'))
                ->setParameter('phone', '%' . $filters['phone'] . '%');
        }

        return $qb;
    }
}