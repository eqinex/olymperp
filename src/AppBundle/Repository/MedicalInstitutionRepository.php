<?php

namespace AppBundle\Repository;

use AppBundle\Traits\RepositoryPaginatorTrait;

/**
 * MedicalInstitutionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MedicalInstitutionRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    public function getAvailableMedicalInstitutions($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('mi');

        $qb->select('mi');

        if (!empty($filters['category'])) {
            $qb->andWhere(
                $qb->expr()->eq('mi.category', ':category')
            )
                ->setParameter('category', $filters['category']);
        }

        if (!empty($filters['name'])) {
            $qb->andWhere(
                $qb->expr()->like('mi.name', ':name')
            )
                ->setParameter('name', '%' . $filters['name'] . '%');
        }

        if (!empty($filters['region'])) {
            $qb->andWhere(
                $qb->expr()->like('mi.region', ':region')
            )
                ->setParameter('region', '%' . $filters['region'] . '%');
        }

        if (!empty($filters['city'])) {
            $qb->andWhere(
                $qb->expr()->like('mi.city', ':city')
            )
                ->setParameter('city', '%' . $filters['city'] . '%');
        }

        if (!empty($filters['index'])) {
            $qb->andWhere(
                $qb->expr()->like('mi.indexMedicalInstitution', ':index')
            )
                ->setParameter('index', '%' . $filters['index'] . '%');
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }
}
