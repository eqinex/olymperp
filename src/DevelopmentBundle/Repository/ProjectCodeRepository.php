<?php


namespace DevelopmentBundle\Repository;

use AppBundle\Traits\RepositoryPaginatorTrait;
use DevelopmentBundle\Entity\ProjectCode;

/**
 * ProjectCodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectCodeRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param int $order
     * @param int $orderBy
     * @param int $currentPage
     * @param int $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getProjectCodes($filters, $orderBy, $order, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('pc');

        $qb->select('pc');

        $qb->andWhere($qb->expr()->isNull('pc.deleted'));

        if (!empty($orderBy)) {
            if ($orderBy == 'companyCode') {
                $qb
                    ->leftJoin('pc.companyCode', 'c')
                    ->orderBy('c.name', $order);
            } elseif ($orderBy == 'responsible') {
                $qb
                    ->leftJoin('pc.responsible', 'u')
                    ->orderBy('u.firstname', $order);
            } else {
                $qb->orderBy('pc.code', $order);
            }
        } else {
            $qb->orderBy('pc.id', 'DESC');
        }

        if (!empty($filters['companyCode'])) {
            $qb
                ->andWhere($qb->expr()->eq('pc.companyCode', ':companyCode'))
                ->setParameter('companyCode', $filters['companyCode']);
        }

        if(!empty($filters['code'])) {
            $qb
                ->andWhere($qb->expr()->like('pc.code', ':code'))
                ->setParameter('code',  '%' . $filters['code'] . '%');
        }

        if(!empty($filters['name'])) {
            $qb
                ->andWhere($qb->expr()->like('pc.name', ':name'))
                ->setParameter('name', '%' . $filters['name'] . '%');
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);

        return $paginator;
    }
}