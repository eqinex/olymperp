{% macro inputs(project, task, taskResults) %}
    <div class="form-group">
        <label class="col-lg-2 control-label"><span class="text-danger">*</span> {{ 'Title' | trans() }}</label>
        <div class="col-lg-9">
            <input type="hidden" class="form-control task-id" value="" name="id">
            <input type="hidden" class="form-control task-protocol" name="task[protocol]" value="{{ task.protocol ? task.protocol.id : '' }}">
            <input type="text" class="form-control task-title" required placeholder="{{ 'Title' | trans() }}" value="" name="task[title]">
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">{{ "Project" | trans() }}</label>
        <div class="col-sm-3">
            <select class="form-control task-project select2-modal" name="task[project]" required>
                {% for project in project_service.getAvailableProjects(app.user) %}
                    <option value="{{ project.id }}"
                            {% if task.project.id is defined and task.project.id == project.id %}
                                {{ "selected" }}
                            {% endif %}>{{ project.name }}</option>
                {% endfor %}
            </select>
        </div>
        <label class="col-sm-2 control-label">{{ "Task Result" | trans() }}</label>
        <div class="col-sm-4" >
            <select class="form-control task-result select2-modal" name="task[result]" required>
                <option value="">{{ 'Select task result' | trans() }}</option>
                {% for result in taskResults %}
                    <option value="{{ result.id }}"
                            {% if task.result.id is defined and task.result.id == result.id %}
                                {{ "selected" }}
                            {% endif %}>{{ result.name }}</option>
                {% endfor %}
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">{{ "Type" | trans() }}</label>
        <div class="col-sm-4">
            <select class="form-control task-type" required name="task[type]">
                {% for key, type in task.typesList %}
                    <option value="{{ key }}"
                            {% if task.type == key %}
                                {{ "selected" }}
                            {% endif %}
                    >{{ type | trans()}}</option>
                {% endfor %}
            </select>
        </div>
        <label class="col-sm-1 control-label">{{ "epic" | trans() }}</label>
        <div class="col-sm-4 epics-wrapper">
            <select class="form-control task-epic select2-modal" name="task[epic]">
                <option value="">{{ 'Select epic' | trans() }}</option>
                {% for epic in task_service.getAvailableEpics(project) %}
                    <option value="{{ epic.id }}"
                            {% if task.epic.id is defined and task.epic.id == epic.id %}
                                {{ "selected" }}
                            {% endif %}>{{ epic.title }}</option>
                {% endfor %}
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="col-lg-2 control-label">{{ "Description" | trans() }}</label>
        <div class="col-lg-9">
            <textarea class="form-control task-description" rows="4" placeholder="{{ "Description" | trans() }}" name="task[description]"></textarea>
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">{{ "Responsible" | trans() }}</label>
        <div class="col-sm-4 responsible-users-wrapper">
            <select class="form-control task-responsible select2-modal" name="task[responsible]" required>
                {% for team, members in employee_service.getUsersGroupedByTeams() %}
                    <optgroup label="{{ team | trans() }}">
                        {% for member in members %}
                            <option value="{{ member.id }}"
                                    {% if task.responsibleUser.id is defined and task.responsibleUser.id == member.id %}
                                        {{ "selected" }}
                                    {% elseif task.responsibleUser.id is not defined and app.user.id == member.id %}
                                        {{ "selected" }}
                                    {% endif %}
                            >{{ member.fullName }} ({{ member.employeeRole }})</option>
                        {% endfor %}
                    </optgroup>
                {% endfor %}
            </select>
        </div>
        <label class="col-sm-1 control-label">{{ "Controlling user" | trans() }}</label>
        <div class="col-sm-4">
            <select class="form-control task-controller select2-modal" name="task[controllingUser]" required>
                {% for team, members in employee_service.getUsersGroupedByTeams() %}

                    <optgroup label="{{ team | trans() }}">{{ task.controllingUser.id is defined ? task.controllingUser.id }}
                        {% for member in members %}
                            <option value="{{ member.id }}"
                                    {% if task.controllingUser.id is defined and task.controllingUser.id == member.id %}
                                        {{ "selected" }}
                                    {% elseif task.controllingUser.id is not defined and app.user.id == member.id %}
                                        {{ "selected" }}
                                    {% endif %}
                            >{{ member.fullName }} ({{ member.employeeRole }})</option>
                        {% endfor %}
                    </optgroup>
                {% endfor %}
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">{{ "Priority" | trans() }}</label>
        <div class="col-sm-3">
            <select class="form-control task-priority" required name="task[priority]">
                {% for key, priority in task.priorityList %}
                    <option value="{{ key }}"
                            {% if task.priority == key %}
                                {{ "selected" }}
                            {% endif %}
                    >{{ ("priority_" ~ priority) | trans()}}</option>
                {% endfor %}
            </select>
        </div>
        <label class="col-sm-2 control-label">{{ "Start At" | trans() }}</label>
        <div class="col-sm-4">
            <input type="text" required class="form-control task-start-at daterange-single-date-picker"
                   name="task[startAt]" value="{{ task.startAt | date('d.m.Y') ~ "09:00"}}">
        </div>
    </div>

    <div class="form-group m-b-0">
        <label class="col-sm-2 control-label">{{ "Original estimate" | trans() }}</label>
        <div class="col-sm-3">
            <input type="hidden" id="time-spent" value="{{ task.timeSpent }}">
            <input type="text" id="original-estimate" class="form-control task-original-estimate"
                   name="task[originalEstimate]" pattern="^([1-9][0-9]*[hmdчдм])|[0-9.]+[hmdчдм]|0" value="{{ task.originalEstimate }}">
            <span class="help-block" style="font-size: 10px;">{{ '1m/1м - 1 minute, 1h/1ч - 1 hour, 1d/1д - 1 day' | trans() }}</span>
        </div>
        <label class="col-sm-2 control-label">{{ "End At" | trans() }}</label>
        <div class="col-sm-4">
            <input type="text" required class="form-control task-end-at daterange-single-date-picker"
                   name="task[endAt]" value="{{ task.startAt | date('d.m.Y') ~ "21:00"}}">
        </div>
    </div>
    <script>
        $(document).ready(function(){
            moment.locale('ru');
            $('.daterange-single-date-picker').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                timePicker: true,
                timePicker24Hour: true,
                timePickerIncrement: 30,
                opens: "left",
                drops: "up",
                locale: {
                    format: 'DD.MM.YYYY HH:mm', applyLabel: "Выбрать", cancelLabel: "Отменить"
                }
            });

            $('.task-description').trumbowyg({removeformatPasted: true});

            if ($('#original-estimate').val() / 2 < $('#time-spent').val()) {
                $('#original-estimate').attr('disabled', 'disabled');
            }

            $('.add-task').bind('click', function () {
                $('.task-responsible').attr('multiple', true);
                $('.task-responsible').attr('name', 'task[responsible][]');

                $('.select2-modal').select2({ width: '100%' })
            });

            $('.edit-request').bind('click', function() {
                $('.task-responsible').removeAttr('multiple');
                $('.task-responsible').attr('name', 'task[responsible]');
                var editTaskForm = $('#editTaskForm');

                editTaskForm.attr('action', $(this).data('href'));
                editTaskForm.find('.task-id').val($(this).data('id'));
                editTaskForm.find('.task-title').val($(this).data('title'));
                editTaskForm.find('.task-project').val($(this).data('project'));
                editTaskForm.find('.task-description').val($(this).data('description'));
                editTaskForm.find('.task-responsible').val($(this).data('responsible'));
                editTaskForm.find('.task-controller').val($(this).data('controller'));
                editTaskForm.find('.task-priority').val($(this).data('priority'));
                editTaskForm.find('.task-type').val($(this).data('type'));
                editTaskForm.find('.task-epic').val($(this).data('epic'));
                editTaskForm.find('.task-protocol').val($(this).data('protocol'));
                editTaskForm.find('.task-start-at').val($(this).data('start-at'));
                editTaskForm.find('.task-end-at').val($(this).data('end-at'));
                editTaskForm.find('.task-original-estimate').val($(this).data('original-estimate') + 'h');
                editTaskForm.find('.task-description').trumbowyg('html', $(this).data('description'));
                editTaskForm.find('.task-result').val($(this).data('result'));

                if ($(this).data('epics-select')) {
                    editTaskForm.find('.epics-wrapper').html($(this).data('epics-select'));
                    editTaskForm.find('.task-epic').val($(this).data('epic'));

                    $('.select2-modal').select2({ width: '100%' });
                }

                var dateRangePicker = $('.daterange-single-date-picker');
                dateRangePicker.daterangepicker({
                    singleDatePicker: true,
                    showDropdowns: true,
                    timePicker: true,
                    timePicker24Hour: true,
                    timePickerIncrement: 30,
                    opens: "left",
                    drops: "up",
                    locale: {
                        format: 'DD.MM.YYYY HH:mm', applyLabel: "Выбрать", cancelLabel: "Отменить"
                    }
                });

                $('.select2-modal').select2({ width: '100%' })
            });

            $('.daterange-single-date-picker').bind('apply.daterangepicker', function(){

                var startDate = moment($('.task-start-at').val(), 'DD.MM.YYYY HH:mm');
                var endDate = moment($('.task-end-at').val(), 'DD.MM.YYYY HH:mm');

                if (startDate > endDate) {
                    alert('Дата начала не может быть позже даты завершения');
                    $('.task-start-at').val($('.task-end-at').val())
                }

                return false;
            })
        });
    </script>
{% endmacro %}

{% macro epicsSelect(project) %}
    <select class="form-control task-epic select2-modal" name="task[epic]">
        <option value="">{{ 'Select epic' | trans() }}</option>
        {% for epic in task_service.getAvailableEpics(project) %}
            <option value="{{ epic.id }}" >{{ epic.title }}</option>
        {% endfor %}
    </select>
{% endmacro %}